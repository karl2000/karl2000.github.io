<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[树莓派使用问题解决]]></title>
      <url>owker.pw/2016/09/26/%E6%A0%91%E8%8E%93%E6%B4%BE%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</url>
      <content type="html"><![CDATA[<p>图片链接</p>
<blockquote>
<p>说明</p>
</blockquote>
<a id="more"></a>
<h2 id="解压-xz压缩包方法"><a href="#解压-xz压缩包方法" class="headerlink" title="解压.xz压缩包方法"></a>解压.xz压缩包方法</h2><p><code>xz -dk ubuntu-16.04-preinstalled-server-armhf+raspi2.img.xz</code><br>-d(解压) -k(保留源文件)</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Ubuntu使用问题解决]]></title>
      <url>owker.pw/2016/09/25/Ubuntu%E4%BD%BF%E7%94%A8%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</url>
      <content type="html"><![CDATA[<p>图片链接</p>
<blockquote>
<p>说明</p>
</blockquote>
<a id="more"></a>
<h2 id="SSH远程登录"><a href="#SSH远程登录" class="headerlink" title="SSH远程登录"></a>SSH远程登录</h2><ol>
<li>更新源列表<code>sudo apt-get update</code></li>
<li>安装SSH<code>sudo apt-get install openssh-server</code></li>
<li>查看SSH是否启动：打开”终端窗口”，输入”sudo ps -e |grep ssh”–&gt;回车–&gt;有sshd,说明ssh服务已经启动，如果没有启动，输入”sudo service ssh start”–&gt;回车–&gt;ssh服务就会启动</li>
<li>使用gedit修改配置文件”/etc/ssh/sshd_config”<br>打开”终端窗口”，输入”sudo gedit /etc/ssh/sshd_config”–&gt;回车–&gt;把配置文件中的”PermitRootLogin without-password”加一个”#”号,把它注释掉–&gt;再增加一句”PermitRootLogin yes”–&gt;保存，修改成功。</li>
</ol>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Cpp深入详解学习总结]]></title>
      <url>owker.pw/2016/09/22/Cpp%E6%B7%B1%E5%85%A5%E8%AF%A6%E8%A7%A3%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</url>
      <content type="html"><![CDATA[<p>图片链接</p>
<blockquote>
<p>说明</p>
</blockquote>
<a id="more"></a>
<h2 id="第一章-Windows程序内部运行机制"><a href="#第一章-Windows程序内部运行机制" class="headerlink" title="第一章 Windows程序内部运行机制"></a>第一章 Windows程序内部运行机制</h2><p>主要介绍如何创建Win32的应用程序步骤：</p>
<ol>
<li>编写WinMain函数，可以在MSDN上查找并复制。</li>
<li>设计窗口类（WNDCLASS）</li>
<li>注册窗口类（RegisterClass）</li>
<li>创建窗口（HWND，CreateWindow）</li>
<li>显示并更新窗口（ShowWindow，UpdateWindow）</li>
<li>编写消息循环（MSG，TranslateMessage，DispatchMessage）</li>
<li>编写窗口过程函数，窗口过程函数的语法可通过MSDN查看WNDCLASS的lpfnWndProc成员变量解释中查到<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">LRESULT CALLBACK WindowProc(	//回调函数定义，WindowProc为自定义</div><div class="line">	HWND hwnd,      // handle to window</div><div class="line">	UINT uMsg,      // message identifier</div><div class="line">	WPARAM wParam,  // first message parameter</div><div class="line">	LPARAM lParam   // second message parameter</div><div class="line">);</div></pre></td></tr></table></figure>
</li>
</ol>
<p>示例程序如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div></pre></td><td class="code"><pre><div class="line">#include &lt;windows.h&gt;</div><div class="line">#include &lt;stdio.h&gt;</div><div class="line"></div><div class="line">LRESULT CALLBACK WinSunProc(</div><div class="line">  HWND hwnd,      // handle to window</div><div class="line">  UINT uMsg,      // message identifier</div><div class="line">  WPARAM wParam,  // first message parameter</div><div class="line">  LPARAM lParam   // second message parameter</div><div class="line">);</div><div class="line"></div><div class="line">int WINAPI WinMain(</div><div class="line">  HINSTANCE hInstance,      // handle to current instance</div><div class="line">  HINSTANCE hPrevInstance,  // handle to previous instance</div><div class="line">  LPSTR lpCmdLine,          // command line</div><div class="line">  int nCmdShow              // show state</div><div class="line">)</div><div class="line">&#123;</div><div class="line">	WNDCLASS wndcls;</div><div class="line">	wndcls.cbClsExtra=0;</div><div class="line">	wndcls.cbWndExtra=0;</div><div class="line">	wndcls.hbrBackground=(HBRUSH)GetStockObject(BLACK_BRUSH);</div><div class="line">	wndcls.hCursor=LoadCursor(NULL,IDC_CROSS);</div><div class="line">	wndcls.hIcon=LoadIcon(NULL,IDI_ERROR);</div><div class="line">	wndcls.hInstance=hInstance;</div><div class="line">	wndcls.lpfnWndProc=WinSunProc;</div><div class="line">	wndcls.lpszClassName=&quot;Weixin2003&quot;;</div><div class="line">	wndcls.lpszMenuName=NULL;</div><div class="line">	wndcls.style=CS_HREDRAW | CS_VREDRAW;</div><div class="line">	RegisterClass(&amp;wndcls);</div><div class="line"></div><div class="line">	HWND hwnd;</div><div class="line">	hwnd=CreateWindow(&quot;Weixin2003&quot;,&quot;北京维新科学技术培训中心&quot;,WS_OVERLAPPEDWINDOW,</div><div class="line">		0,0,600,400,NULL,NULL,hInstance,NULL);</div><div class="line"></div><div class="line">	ShowWindow(hwnd,SW_SHOWNORMAL);</div><div class="line">	UpdateWindow(hwnd);</div><div class="line"></div><div class="line">	MSG msg;</div><div class="line">	while(GetMessage(&amp;msg,NULL,0,0))</div><div class="line">	&#123;</div><div class="line">		TranslateMessage(&amp;msg);</div><div class="line">		DispatchMessage(&amp;msg);</div><div class="line">	&#125;</div><div class="line">	return 0;</div><div class="line">&#125;</div><div class="line"></div><div class="line">LRESULT CALLBACK WinSunProc(</div><div class="line">  HWND hwnd,      // handle to window</div><div class="line">  UINT uMsg,      // message identifier</div><div class="line">  WPARAM wParam,  // first message parameter</div><div class="line">  LPARAM lParam   // second message parameter</div><div class="line">)</div><div class="line">&#123;</div><div class="line">	switch(uMsg)</div><div class="line">	&#123;</div><div class="line">	case WM_CHAR:</div><div class="line">		char szChar[20];</div><div class="line">		sprintf(szChar,&quot;char is %d&quot;,wParam);</div><div class="line">		MessageBox(hwnd,szChar,&quot;weixin&quot;,0);</div><div class="line">		break;</div><div class="line">	case WM_LBUTTONDOWN:</div><div class="line">		MessageBox(hwnd,&quot;mouse clicked&quot;,&quot;weixin&quot;,0);</div><div class="line">		HDC hdc;</div><div class="line">		hdc=GetDC(hwnd);</div><div class="line">		TextOut(hdc,0,50,&quot;计算机编程语言培训&quot;,strlen(&quot;计算机编程语言培训&quot;));</div><div class="line">		ReleaseDC(hwnd,hdc);</div><div class="line">		break;</div><div class="line">	case WM_PAINT:</div><div class="line">		HDC hDC;</div><div class="line">		PAINTSTRUCT ps;</div><div class="line">		hDC=BeginPaint(hwnd,&amp;ps);</div><div class="line">		TextOut(hDC,0,0,&quot;维新培训&quot;,strlen(&quot;维新培训&quot;));</div><div class="line">		EndPaint(hwnd,&amp;ps);</div><div class="line">		break;</div><div class="line">	case WM_CLOSE:</div><div class="line">		if(IDYES==MessageBox(hwnd,&quot;是否真的结束？&quot;,&quot;weixin&quot;,MB_YESNO))</div><div class="line">		&#123;</div><div class="line">			DestroyWindow(hwnd);</div><div class="line">		&#125;</div><div class="line">		break;</div><div class="line">	case WM_DESTROY:</div><div class="line">		PostQuitMessage(0);</div><div class="line">		break;</div><div class="line">	default:</div><div class="line">		return DefWindowProc(hwnd,uMsg,wParam,lParam);</div><div class="line">	&#125;</div><div class="line">	return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="第二章-掌握C"><a href="#第二章-掌握C" class="headerlink" title="第二章 掌握C++"></a>第二章 掌握C++</h2><p>封装性，继承性，多态性<br>基本输入输出头文件#include <iostream.h>(C语言为#include <stdio.h>)</stdio.h></iostream.h></p>
<p>结构体<br>c中结构体内不允许有函数，Cpp可以</p>
<p>构造函数：<br>1.自动调用<br>2.与类同名<br>3.没有返回值<br>4.有多个重载形式<br>5.无定义会自动生成，但不初始化</p>
<p>构造函数：带参数不带参数都可以，可以有多个<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">Point()</div><div class="line">&#123;</div><div class="line">	x=0;</div><div class="line">	y=0;</div><div class="line">&#125;</div><div class="line">Point(int a,int b)</div><div class="line">&#123;</div><div class="line">	x=a;</div><div class="line">	y=b;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>析构函数：不能带参数，没有返回值，只能有一个<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">~Point()</div><div class="line">&#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>函数重载：发生在一个类中，不同参数类型或个数才能构成重载（区别于发生于父类和子类的函数覆盖）<br>函数覆盖的条件：</p>
<ol>
<li>父类函数必须是虚函数，用virtual关键字声明</li>
<li>发生在父类与子类之间</li>
<li>函数名与参数必须完全相同</li>
</ol>
<p>函数隐藏的两种情况：</p>
<ol>
<li>子类与父类函数名和参数完全相同，只是父类没用virtual关键字</li>
<li>子类与父类函数名相同，参数不同，不管有没有用virtual，都是隐藏</li>
</ol>
<blockquote>
<p>覆盖就是看不见，隐藏就是通过类名::函数名可以访问到。如果基类被重写的函数是虚函数的话就是覆盖，否则就是隐藏。</p>
</blockquote>
<p>this指针，指向对象本身，每个生成的对象都会有一个this指针指向本身</p>
<p>基类，派生类<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">class Fish : public Animal  //Animal基类，Fish派生类</div><div class="line">&#123;</div><div class="line">public:</div><div class="line">	</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p>
<p>public:都可访问<br>protected:子类可访问<br>private:只能在类中访问</p>
<p>对函数参数进行初始化，可用如下方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Fish():Animal(300,400)    //子类向父类带参数的构造函数传递参数</div><div class="line">point():x(0),y(0)    //常数初始化</div></pre></td></tr></table></figure></p>
<p>双冒号为作用域标识符，表示函数属于哪个类，如果之前没有类名则为全局函数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Animal::sleep()</div><div class="line">::ShowWindow();//全局函数</div></pre></td></tr></table></figure></p>
<p>父类对象与子类对象的首地址是一样的<br><img src="http://ww2.sinaimg.cn/large/a8fc9690gw1f82dntv0kbj20en07a74q.jpg" alt=""></p>
<p>多态性：子类有的调用子类，子类没有的调用父类<br>虚函数virtual：在h文件中加，当函数实现放到c文件中不加virtual<br>纯虚函数virtual void breathe()=0;必须要实现纯虚函数功能才能实例化对象</p>
<p>引用int &amp;b=a;    //b为变量a的别名，引用必须初始化，指针则不一定要初始化</p>
<p>编译链接：编译单独的c文件生成.obj，然后链接生成.exe，h文件通过c文件中的包含直接加到c文件中（预处理）</p>
<h2 id="第三章-MFC框架程序剖析"><a href="#第三章-MFC框架程序剖析" class="headerlink" title="第三章 MFC框架程序剖析"></a>第三章 MFC框架程序剖析</h2><p>按照第一章流程分析</p>
<h2 id="第七章-对话框"><a href="#第七章-对话框" class="headerlink" title="第七章 对话框"></a>第七章 对话框</h2><p>对话框创建</p>
<blockquote>
<p>模态对话框：需关闭才可执行其他任务<br>非模态对话框</p>
</blockquote>
<p>在MFC中，对资源的操作通常都是通过一个与资源相关的类来完成的</p>
<p>在resource选项卡中添加DIALOG，布置相应资源；<br>创建类，可以View-&gt;ClassWizard创建，也可以双击创建，类名一般C开头</p>
<p>if函数括号内可以逗号表达式，整个判断值为逗号后面的表达式值<br><code>if(GetDlgItem(IDC_NUMBER1)-&gt;GetWindowText(str),str==&quot;Number1:&quot;)</code></p>
<p>七种访问对话框控件方式：<br><strong>GetDlgItem()-&gt;Get(Set)WindowText()</strong><br>GetDlgItemText()/SetDlgItemText()<br>GetDlgItemInt()/SetDlgItemInt()<br><strong>将控件和整型变量相关联</strong><br><strong>将控件和控件变量相关联</strong><br>SendMessage()<br>SendDlgItemMessage()</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux下QuartusII常用命令小结]]></title>
      <url>owker.pw/2016/09/07/Linux%E4%B8%8BQuartusII%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%B0%8F%E7%BB%93/</url>
      <content type="html"><![CDATA[<p>图片链接</p>
<blockquote>
<p>说明</p>
</blockquote>
<a id="more"></a>
<p>Quartus II 命令行模式常用命令：</p>
<p>使用JTAG模式下载到FPGA上，使用命令：</p>
<p>quartus_pgm -c USB-Blaster -m jtag -o p;xxx.sof</p>
<p>单独打开GUI图形下载界面，使用命令：</p>
<p>quartus_pgmw</p>
<p>分析和综合（analysis &amp; synthsis项目，使用命令：</p>
<p>quartus_map 项目名</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux教程笔记]]></title>
      <url>owker.pw/2016/09/07/Linux%E6%95%99%E7%A8%8B%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p>图片链接</p>
<blockquote>
<p>说明</p>
</blockquote>
<a id="more"></a>
<ol>
<li>文件系统管理<br>9.1<br>分区：主分区总共4个，扩展分区1个（占用主分区数量），逻辑分区不限（在扩展分区中）<br>硬盘硬件接口：<br>IDE（淘汰hda）<br>SCSI(sda1,sda2,sda5（扩展分区）等)<br>9.2<br>df -h；查看分区情况<br>du -sh 目录名：统计目录大小<br>dumpe2fs /dev/sda1：看详细信息<br>挂载<br>建立挂载点 mkdir /mnt/cdrom<br>挂载命令<code>mount [-t 文件系统（iso9660/vfat）] [-o 特殊选项] 设备文件名（dev/cdrom） 挂载点（mnt/cdrom)</code><br>卸载 umount 设备文件名或挂载点（/mnt/cdrom或/dev/cdrom）</li>
</ol>
<p>fdisk -l :查看有多少可被识别的硬盘或优盘</p>
<p>9.3<br>fdisk /dev/sdb(对新硬盘进行分区)<br>(参数n新建,d删除,t更改分区，l查看类型83为linux，5为extended，82为swap，最后记得w)<br>partprobe重新读取分区表信息<br>mkfs -t ext4 /dev/sdb1(格式化，格式化swap分区用mkswap /dev/sdb1,swapon /dev/sdb1加入，swapoff /dev/sdb1取消  )<br>分区自动挂载要修改/etc/fstab<br>（swap要这么写：/dev/sdb1    swap    swap  defaults  0  0）<br>(编写过程可能用到的指令dumpe2fs -h /dev/sdb1，fdisk -l，mount，df)<br>修改好文件后需测试文件是否错误(一定不能错)<br>mount -a</p>
<p>9.4<br>free -m 查询swap分区使用情况</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Quartus软件安装要点记录]]></title>
      <url>owker.pw/2016/09/06/Quartus%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85%E8%A6%81%E7%82%B9%E8%AE%B0%E5%BD%95/</url>
      <content type="html"><![CDATA[<p><img src="http://ww4.sinaimg.cn/large/a8fc9690gw1f7k8tzta2hj20hs0dcmy9.jpg" alt=""></p>
<blockquote>
<p>说明</p>
</blockquote>
<a id="more"></a>
<p><a href="https://www.altera.com.cn/downloads/download-center.html" target="_blank" rel="external">quartus系列软件下载地址</a><br>想要以前版本的可上<a href="ftp://ftp.altera.com/outgoing/release/" target="_blank" rel="external">altera官方ftp</a></p>
<p>windows7系统装Quartus II 11.0sp1 (64-Bit)</p>
<p>RedHat系统可安装QuartusSetup-16.0.0.211-linux.run，注意16版本支持器件不同，要先看看自己用什么规格的芯片，否则还得重新装<br>因此这里也装和win7相同版本的软件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">chmod 755 QuartusSetup-16.0.0.211-linux.run</div><div class="line">./QuartusSetup-16.0.0.211-linux.run</div></pre></td></tr></table></figure></p>
<p>11.0sp1<br>在安装./11.0sp1_acds_linux.sh时，如果是远程登录，没有图形界面，如果顺利会出现<br>“altera_installer_gui: cannot connect to X server”提示出现问题，此时输入<br>export DISPLAY=:0.0<br>再进行安装./11.0sp1_acds_linux.sh<br>在受控电脑上有图形界面出现，按提示安装<br><a href="http://www.tuicool.com/articles/QJruE3" target="_blank" rel="external">Linux下解决cannot connect to X server :0.0 问题</a></p>
<p>13.0sp1<br>安装过程会出现很多依赖文件或者冲突文件，在配置好yum源情况下，除libz.so.1外，基本都可通过以下命令解决<br>rpm -e 包名 –nodeps（卸载）（可能不应该删除）<br>rpm -ivh 包全名<br>yum install -y 包名（安装）</p>
<p>软件安装后还需要设置环境变量，否则quartus命令无效</p>
<p>vi /etc/profile最下方添加<br>export  PATH=”$PATH:（后面为绝对路径）/disk1/altera/13.0sp1/quartus/bin”</p>
<p>source /etc/profile更新增加环境变量<br>echo $PATH查看环境变量是否加上<br>任意敲入命令看是否识别，如quartus_sh，下图所示<br><img src="http://ww1.sinaimg.cn/large/a8fc9690gw1f7mbvypr2gj20pu0be43e.jpg" alt=""></p>
<p><a href="http://www.linuxidc.com/Linux/2015-01/111459.htm" target="_blank" rel="external">Linux 下三种方式设置环境变量</a><br><a href="http://soft.chinabyte.com/os/169/11412169.shtml" target="_blank" rel="external">Linux环境变量的设置和查看方法</a></p>
<p>安装后影响到桌面环境，无法登陆图形界面！！！</p>
<p>quartus命令行手册<br><a href="https://yunpan.cn/cMaApyAJ3UzTN" target="_blank" rel="external">https://yunpan.cn/cMaApyAJ3UzTN</a>  访问密码 9b3c</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux常用语法小结（redhat系列）]]></title>
      <url>owker.pw/2016/09/05/Linux%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/</url>
      <content type="html"><![CDATA[<p><img src="http://ww1.sinaimg.cn/large/a8fc9690gw1f7k8vkx117j20zk0nj7i1.jpg" alt=""></p>
<blockquote>
<p>说明</p>
</blockquote>
<a id="more"></a>
<p>软件安装git<br>yum install -y git </p>
<p>rpm安装<br>rpm -ivh </p>
<p>tar压缩解压缩<br>tar -zvcf a.tar.gz a<br>tar -zxvf a.tar.gz</p>
<p>删除文件<br>rm -rf 文件名</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[常用技巧整理]]></title>
      <url>owker.pw/2016/09/05/%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7%E6%95%B4%E7%90%86/</url>
      <content type="html"><![CDATA[<p><img src="http://ww1.sinaimg.cn/large/a8fc9690gw1f7k96br2v5j21hc10dnbk.jpg" alt=""></p>
<blockquote>
<p>常用技巧</p>
</blockquote>
<a id="more"></a>
<h2 id="Shadowsocks代理共享给局域网内的移动设备-转"><a href="#Shadowsocks代理共享给局域网内的移动设备-转" class="headerlink" title="Shadowsocks代理共享给局域网内的移动设备[转]"></a>Shadowsocks代理共享给局域网内的移动设备[转]</h2><ol>
<li>首先电脑启动shadowsocks客户端，右键托盘图标，把“允许来自局域网的连接”勾上。<br><img src="http://ww3.sinaimg.cn/large/a8fc9690gw1f7iqdrpfkuj205x06a74n.jpg" alt=""></li>
<li>获取电脑的内网IP地址：win键+R输入cmd回车，输入ipconfig回车。<br><img src="http://ww1.sinaimg.cn/large/a8fc9690gw1f7ipryt5yyj20ff03mdgb.jpg" alt=""></li>
<li>双击shadowsocks客户端托盘图标，记住本机代理的端口等会手机端要用。一般默认是1080<br><img src="http://ww4.sinaimg.cn/large/a8fc9690gw1f7iqh8mmk4j20cw07gdgj.jpg" alt=""></li>
<li>手机端，我这里以iPhone为例，绝大部分设备都是支持http代理的，设置方法大同小异。<br>打开设置 - 无线局域网 - 点击你所连接的wifi旁边的“i”进入该网络的设置。<br>拉到最下面 - HTTP代理 - 点自动。<br>在URL里填写你的电脑内网IP地址+端口号+/pac，<br>例如我这里就是：<a href="http://192.168.1.57:1080/pac" target="_blank" rel="external">http://192.168.1.57:1080/pac</a><br>至此你的iPhone就可以通过电脑的代理了，无论是用手机浏览器上网，或者用Facebook、twitter、Instagram等app，都可以畅通无阻。<br>（若你的设备没法填URL地址，那么请参考步骤5的填法）<br><img src="http://ww2.sinaimg.cn/large/a8fc9690gw1f7iqj8dniuj20970cs3z6.jpg" alt=""></li>
<li>如果局域网内另一台电脑也想通过本电脑进行浏览网页，那么就要在具体的软件设置http代理，这里以IE浏览器为例：<br>设置 - Internet选项 - 连接 - 局域网设置，在代理服务器一栏，勾上为lan使用代理服务器，填法和上面类似。<br>服务器地址填上面电脑的内网IP：192.168.1.57<br>端口填shadowsocks客户端的代理端口：1080</li>
</ol>
<h2 id="如何查看某个端口被谁占用"><a href="#如何查看某个端口被谁占用" class="headerlink" title="如何查看某个端口被谁占用"></a><a href="http://jingyan.baidu.com/article/3c48dd34491d47e10be358b8.html" target="_blank" rel="external">如何查看某个端口被谁占用</a></h2><p>开始—-&gt;运行—-&gt;cmd，或者是window+R组合键，调出命令窗口<br>输入命令：netstat -aon|findstr “1080”，查看被占用的端口PID，此例为3056<br><img src="http://ww4.sinaimg.cn/large/a8fc9690gw1f7n7zm6unxj20hr01ewej.jpg" alt=""><br>打开任务管理器，在进程中点击查看—&gt;选择列，将PID(进程标示符)前面的勾打上，点击确定，结束PID为3056的进程。</p>
<p><a href="http://jingyan.baidu.com/article/455a99 509eb6daa1662778b6.html" target="_blank" rel="external">如何使用Ghost对linux系统进行整盘备份恢复（不实用）</a><br>需要很大的硬盘空间，费时，没有实际使用</p>
<ol>
<li>制作大白菜启动盘</li>
<li>进入Winpe系统界面，双击打开“Ghost32 115.1”程序，点击“local”，点击“Disk”，点击“To Image”</li>
<li>选择需要备份的“Linux备份系统的源盘”，单击“OK”。</li>
<li>择存放备份文件的移动硬盘，定义备份文件名称，单击“Save”。<br>恢复<br>点击“local”，点击“Disk”，点击“From Image”。</li>
</ol>
<p>以下更为实用一点<br><a href="http://www.linuxidc.com/Linux/2015-03/114458.htm" target="_blank" rel="external">Linux入门学习教程：如何备份Linux系统</a></p>
<ol>
<li>在linux下新建挂载点，<code>mkdir /mnt/usb</code></li>
<li>挂载U盘mount /dev/sdb1 /mnt/usb<br>以上两步如果系统自动识别优盘，用df命令查看挂载点本例挂载点为<code>/run/media/root/60A7-F683/</code></li>
</ol>
<p>备份命令<code>rsync -Pa / /run/media/root/60A7-F683/backup_20160909 --exclude=/media/* --exclude=/sys/* --exclude=/proc/* --exclude=/mnt/* --exclude=/tmp/* --exclude=/run/media/root/60A7-F683/*</code><br>还原命令<code>rsync -Pa /run/media/root/60A7-F683/backup_20160909</code></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Linux技巧小结]]></title>
      <url>owker.pw/2016/09/05/Linux%E6%8A%80%E5%B7%A7%E5%B0%8F%E7%BB%93/</url>
      <content type="html"><![CDATA[<p><img src="http://ww1.sinaimg.cn/large/a8fc9690gw1f7k8uyjhqrj20hs0dxgoy.jpg" alt=""></p>
<blockquote>
<p>主要记录Linux使用过程遇到的需要处理的问题</p>
</blockquote>
<a id="more"></a>
<h2 id="修改IP永久生效"><a href="#修改IP永久生效" class="headerlink" title="修改IP永久生效"></a>修改IP永久生效</h2><ol>
<li>切换到以下目录并打开编辑<br>vi /etc/sysconfig/network-scripts/ifcfg-eth0（eth0，第一块网卡，如果是第二块则为eth1）</li>
<li>按如下修改ip<br>DEVICE=eth0（如果是第二块刚为eth1）<br>BOOTPROTO=static<br>IPADDR=192.168.1.115(改成要设置的IP)<br>NETMASK=255.255.255.0 (子网掩码)<br>GATEWAY=192.168.1.1(网关)<br>ONBOO=yes</li>
<li>重启服务，通过ifconfig进行验证<br>service network restart</li>
</ol>
<p>注：如果是临时修改IP重启系统后恢复原始IP则用以下命令<br>ifconfig IP地址 netmask 子网掩码</p>
<h2 id="局域网内远程登录Linux系统"><a href="#局域网内远程登录Linux系统" class="headerlink" title="局域网内远程登录Linux系统"></a>局域网内远程登录Linux系统</h2><ol>
<li>安装SecureCRT软件<br><img src="http://ww1.sinaimg.cn/large/a8fc9690gw1f7ippub25vj20g408jtas.jpg" alt=""></li>
<li>查询本机正在使用的网卡IP地址<br><code>win+R;cmd;ipconfig</code><br>结果为“192.168.1.100”<br><img src="http://ww1.sinaimg.cn/large/a8fc9690gw1f7ipryt5yyj20ff03mdgb.jpg" alt=""></li>
<li>查询远端Linux系统IP地址<br><code>ifconfig</code><br>结果一定也在同一网段内，示例的结果是“192.168.1.108”</li>
<li>通过SecureCRT新建连接并设置<br><img src="http://ww3.sinaimg.cn/large/a8fc9690gw1f7ipx8k56gj20f40bw0v1.jpg" alt=""></li>
</ol>
<p>注：同一台电脑通过VMware设置介绍，网络设置界面说明如下；<br><img src="http://ww3.sinaimg.cn/large/a8fc9690gw1f7ipzjlxmyj20jy0bndid.jpg" alt=""></p>
<blockquote>
<p>桥接模式：直接用真实网卡与虚拟机通信，需占用局域网内的IP地址<br>NAT模式：通过虚拟网卡VMnet8通信，只能与当前电脑通信，可以访问互联网<br>仅主机模式：通过虚拟网卡VMnet8通信，只能与当前电脑通信，不能访问互联网</p>
</blockquote>
<h2 id="Redhat-7-0使用CentOS-7-的Yum-网络源"><a href="#Redhat-7-0使用CentOS-7-的Yum-网络源" class="headerlink" title="Redhat 7.0使用CentOS 7 的Yum 网络源"></a><a href="http://www.centoscn.com/CentOS/config/2015/0328/5030.html" target="_blank" rel="external">Redhat 7.0使用CentOS 7 的Yum 网络源</a></h2><ol>
<li>删除原yum包<br><code>rpm -qa|grep yum|xargs rpm -e --nodeps</code>删除软件用该命令</li>
<li>电脑可上网</li>
<li>下载CentOS可用yum包并安装</li>
<li>修改repo文件<blockquote>
<p>注：要将下载的repo文件内”$releasever”替换为相应版本号，去yum源核对路径，否则还会提示“This system is not registered to Red Hat Subscription Management”错误。</p>
</blockquote>
</li>
<li>测试，yum install -y gcc;yum install -y gcc-c++</li>
</ol>
<p><a href="http://nameyjj.blog.51cto.com/788669/557424" target="_blank" rel="external">linux查看内核版本、系统版本、系统位数（32or64）</a></p>
<h2 id="安装linux下的ShadowSocks"><a href="#安装linux下的ShadowSocks" class="headerlink" title="安装linux下的ShadowSocks"></a><a href="https://github.com/shadowsocks/shadowsocks-qt5/wiki" target="_blank" rel="external">安装linux下的ShadowSocks</a></h2><p>以下方法可安装成功，但是桌面系统受影响，进不了图形界面（正在处理）:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">如果使用传统的yum包管理工具的话，需要从Copr下载相应版本的repo文件放到/etc/yum.repos.d/下，然后通过yum安装：</div><div class="line">sudo yum update</div><div class="line"></div><div class="line">sudo yum install shadowsocks-qt5</div><div class="line">RHEL/CentOS请确认已经添加了EPEL源。</div></pre></td></tr></table></figure></p>
<h2 id="chrome浏览器安装"><a href="#chrome浏览器安装" class="headerlink" title="chrome浏览器安装"></a><a href="https://www.google.com/chrome/browser/desktop/index.html" target="_blank" rel="external">chrome浏览器安装</a></h2><h2 id="chromium浏览器安装"><a href="#chromium浏览器安装" class="headerlink" title="chromium浏览器安装"></a><a href="https://pkgs.org/centos-7/epel-testing-x86_64/chromium-52.0.2743.116-11.el7.x86_64.rpm.html" target="_blank" rel="external">chromium浏览器安装</a></h2><h2 id="RedHat软件安装小结"><a href="#RedHat软件安装小结" class="headerlink" title="RedHat软件安装小结"></a>RedHat软件安装小结</h2><ol>
<li>安装包名.rpm<br>rpm -ivh 安装包名.rpm<br>yum install -y 安装包名(安装yum源有的软件)</li>
<li>安装包名.run<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">chmod 755 安装包名.run</div><div class="line">./安装包名.run(直接安装)</div></pre></td></tr></table></figure>
</li>
</ol>
<blockquote>
<p>在终端中转到run文件所在的文件夹，执行  chmod +x ./文件.run  以赋予其可执行权限，最后输入  ./文件.run  执行文件，按所给的提示进行安装。<br>如果遇到赋予可执行权限后依旧无法执行的情况，可能是因为该run文件处于FAT或NTFS格式的磁盘分区中，不可直接对其赋值，最好的办法是将其移动至ext4的Linux分区中再赋值执行。FAT不支持POSIX权限，在NTFS分区中可使用  ntfs-config  软件赋予其可执行权限。</p>
</blockquote>
<ol>
<li>iso文件</li>
</ol>
<blockquote>
<p>如果拷贝到本地，可以使用mount<br>mount fileName mountPoint -o loop，fileName是镜像文件名(<em>.iso,</em>.img)，<br>用例：如我有一个/home/rhel5.2.iso光盘镜像文件，<br>mkdir /mnt/b<br>mount /home/rhel5.2.iso /mnt/b -o loop，这样进入目录/mnt/b 你就能浏览rhel5.2.iso的内容了，*.img文件的用法一样。 </p>
</blockquote>
<ol>
<li>源码包<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">./configure</div><div class="line">make</div><div class="line">make install</div></pre></td></tr></table></figure>
</li>
</ol>
<p>5.脚本安装包</p>
<p><code>./*.sh</code></p>
<p>Ctrl+Alt+F?(?为数字)：linux切换tty</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[RedHat7系统安装问题解决]]></title>
      <url>owker.pw/2016/09/05/RedHat%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</url>
      <content type="html"><![CDATA[<p><img src="http://ww1.sinaimg.cn/large/a8fc9690gw1f7ijg6946lj21hc0zkk1d.jpg" alt=""></p>
<blockquote>
<p>RedHat系列（包括CentOS）系统在使用实际电脑安装时，出现“dev/root does not exist”的解决办法。</p>
</blockquote>
<a id="more"></a>
<p>在笔记本上安装纯Linux操作系统时出现如下错误：<br><img src="http://ww1.sinaimg.cn/large/a8fc9690gw1f7iiwr0zkaj20zk0k078n.jpg" alt=""></p>
<p>经过上面的步骤，本应进入RedHat的安装界面。但实际上未能进入，而是出现了类似上图的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">dracut-initqueue[624]:Warning: Could not boot.</div><div class="line">dracut-initqueue[624]:Warning: /dev/root does not exist.Starting Dracut EmergencyShell…</div><div class="line">Warning: /dev/root does not exist</div></pre></td></tr></table></figure></p>
<p>该问题是由于安装程序未能找到安装文件所致。<br>可以在随后出现的 <code>dracut:/#</code> 输入命令 <code>find / -name RHEL*</code>(即在根目录下搜索RHEL开头的文件，本例装的是RedHat系统，CentOS可以搜CentOS*)，找到安装文件所在的位置，即<code>/dev/disk/by-labelRHEL-7.0\x20se</code>（即指向U盘的位置）,<br>重启后修改(在启动引导的地方输入 Tab（CentOS为输入e，界面有提示）进入编辑状态)启动配置，将<br><code>vmlinuz initrd=initrd.imginst.stage2=hd:LABEL=RHEL-7.0\x20server.x86_64 rd.live.check quiet 改为：</code><br><code>vmlinuz initrd=initrd.imginst.stage2=hd:LABEL=RHEL-7.0\x20se       quiet</code><br>这是由于文件名太长，导致识别错误，从而找不到文件。</p>
<blockquote>
<p>linux系统安装时，采用“大白菜”软件，制作USB启动盘ISO模式，将相应的iso文件导入即可。<br>VMware虚拟机安装时，如果直接跳过开头菜单，可以选择自定义（高级）中的“我以后再安装操作系统”，完成后再将iso指定好开始安装系统。</p>
</blockquote>
<p>步骤</p>
<ol>
<li>系统安装</li>
<li>连接WinScp</li>
<li>设置yum源</li>
</ol>
<h2 id="Redhat-7-0使用CentOS-7-的Yum-网络源"><a href="#Redhat-7-0使用CentOS-7-的Yum-网络源" class="headerlink" title="Redhat 7.0使用CentOS 7 的Yum 网络源"></a><a href="http://www.centoscn.com/CentOS/config/2015/0328/5030.html" target="_blank" rel="external">Redhat 7.0使用CentOS 7 的Yum 网络源</a></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">`rpm -qa|grep yum|xargs rpm -e --nodeps`删除软件用该命令</div><div class="line">安装删除的软件</div><div class="line">/etc/yum.repos.d这里改repo</div><div class="line">&gt;注：（有时候！！）要将下载的repo文件内&quot;$releasever&quot;替换为相应版本号，去yum源核对路径，否则还会提示“This system is not registered to Red Hat Subscription Management”错误。</div><div class="line">测试，yum install -y gcc;yum install -y gcc-c++</div></pre></td></tr></table></figure>
<h2 id="CentOS-中-YUM-安装桌面环境"><a href="#CentOS-中-YUM-安装桌面环境" class="headerlink" title="CentOS 中 YUM 安装桌面环境"></a><a href="https://cnzhx.net/blog/centos-yum-install-desktop/" target="_blank" rel="external">CentOS 中 YUM 安装桌面环境</a></h2><h2 id="更新库文件后，重启系统，无法进入图形界面"><a href="#更新库文件后，重启系统，无法进入图形界面" class="headerlink" title="更新库文件后，重启系统，无法进入图形界面"></a>更新库文件后，重启系统，无法进入图形界面</h2><p>重新安装桌面环境<br>yum grouplist<br>yum groupinstall “KDE Plasma Workspaces”或yum groupinstall “GNOME Desktop”<br>systemctl get-default<br>systemctl set-default graphical.target<br>startx<br>yum groupremove<br>出现“xinit: unable to connect to X server: Connection refused”</p>
<p>推测为显卡驱动问题，到官网下载相应驱动</p>
<h2 id="linux下共享库损坏（libz-so-1）解决方案"><a href="#linux下共享库损坏（libz-so-1）解决方案" class="headerlink" title="linux下共享库损坏（libz.so.1）解决方案"></a>linux下共享库损坏（libz.so.1）解决方案</h2><p>安装quartus11.0sp1时需要卸载libz(有冲突需更新)，卸载后rpm命令无效<br>此时找另一台电脑，将（/usr/lib64/下的libz.so.1和libz.so.1.2.7）和（/usr/lib/下的libz.so.1和libz.so.1.2.7）拷贝到相同文件夹</p>
<p>如果拷贝后软链接失效，可把libz.so.1删除（rm -rf libz.so.1），重新生成链接（ln -s libz.so.1.2.7 libz.so.1）<br>libz.so.1.2.3为源文件<br>libz.so.1为链接<br>如果源文件损坏，到相同电脑拷贝或者网上下载，尽量用相同版本的，版本不同也可以试，我的情况libz.so.1.2.7坏了，用libz.so.1.2.3的也可以用</p>
<h2 id="出现-Errno-14-curl-6问题解决"><a href="#出现-Errno-14-curl-6问题解决" class="headerlink" title="出现[Errno 14] curl#6问题解决"></a>出现<code>[Errno 14] curl#6</code>问题解决</h2><p>出现该问题需要修改resolv.conf文件，在域名服务器配置中，添加一个8.8.8.8，就解决了：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># vi /etc/resolv.conf</div><div class="line"> </div><div class="line"># Generated by NetworkManager</div><div class="line">nameserver 8.8.8.8</div><div class="line">nameserver 211.155.23.88</div><div class="line">nameserver 211.155.27.88</div></pre></td></tr></table></figure></p>
<p>ping www.baidu.com进行验证，若还是不通，则查看网络配置文件<br>vi /etc/sysconfig/network-scripts/ifcfg-eth0<br>确保如下几行正确<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">BOOTPROTO=static</div><div class="line">IPADDR=192.168.1.115</div><div class="line">NETMASK=255.255.255.0</div><div class="line">GATEWAY=192.168.1.1</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[个人博客绑定独立域名]]></title>
      <url>owker.pw/2016/09/04/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%BB%91%E5%AE%9A%E7%8B%AC%E7%AB%8B%E5%9F%9F%E5%90%8D/</url>
      <content type="html"><![CDATA[<p><img src="http://ww1.sinaimg.cn/large/a8fc9690gw1f7hn1aitemj21hc0zkgv3.jpg" alt=""></p>
<blockquote>
<p>此文介绍如何将个人博客绑定到独立域名上。</p>
</blockquote>
<a id="more"></a>
<h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><ol>
<li><p>购买独立域名（owker.pw），这里是在百度开放云上购买的<br><img src="http://ww3.sinaimg.cn/large/a8fc9690gw1f7f7qm6bclj20ik0ch0u2.jpg" alt="" title="百度开放云购买独立域名截图"></p>
</li>
<li><p>设置域名与相应ip的对应关系<br>由于只购买域名并没有购买服务器，即没有自己的独立空间，这个独立空间是github提供的，因此需将独立域名与github提供的ip相对应</p>
</li>
</ol>
<p>查询<a href="https://karl2000.github.io的ip地址" target="_blank" rel="external">https://karl2000.github.io的ip地址</a></p>
<p><img src="http://ww2.sinaimg.cn/large/a8fc9690gw1f7f8hgettxj20o40ecn0e.jpg" alt="" title="查询ip"></p>
<p>在百度开放云上设置域名与ip（151.101.36.133）的对应<br><img src="http://ww3.sinaimg.cn/mw690/a8fc9690gw1f7f8kyd5idj20r90f776l.jpg" alt="" title="设置参考图"></p>
<ol>
<li><p>在source文件夹下增加CNAME文件，用notepad++编辑域名地址，即owker.pw</p>
</li>
<li><p>修改站点目录下的_config.yml文件，将url指定到owker.pw（url: owker.pw）</p>
</li>
</ol>
<p>思维导图</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[hexo主题效果优化]]></title>
      <url>owker.pw/2016/09/04/hexo%E4%B8%BB%E9%A2%98%E6%95%88%E6%9E%9C%E4%BC%98%E5%8C%96/</url>
      <content type="html"><![CDATA[<p><img src="http://ww2.sinaimg.cn/large/a8fc9690gw1f7he0hb35zj21hc0zb4g5.jpg" alt=""></p>
<blockquote>
<p>为改善阅读体验，需对主题部分功能进行完善。</p>
</blockquote>
<a id="more"></a>
<ul>
<li>隐藏全文，增加阅读全文效果<br>在.md文件中需要隐藏部分前增加代码<code>&lt;!-- more --&gt;</code>，效果如下；<br><img src="http://ww2.sinaimg.cn/large/a8fc9690gw1f7he5wkx60j20bi0370sq.jpg" alt=""></li>
<li><p>代码黑底白字，高亮显示<br>在主题_config.yml文件中设置highlight_theme: night，效果如下：<br><img src="http://ww4.sinaimg.cn/large/a8fc9690gw1f7gx4ncjwej20kj06aaax.jpg" alt=""></p>
</li>
<li><p>添加背景图片或背景颜色</p>
<blockquote>
<p>首先找到一个背景图片放到 hexo（hexo工程文件）-&gt; themes -&gt; next -&gt; source -&gt; images 的路径下；<br>然后在hexo（hexo工程文件）-&gt; themes -&gt; next -&gt; source -&gt; css -&gt; _schemes -&gt;Pisces（或Mist或Muse），找到路径下的index.styl文件，在文件的最上方加上一代码 body { background:url(/images/background.jpg（这是你之前加的背景图片的名字）);} 或者设置背景颜色body { background: #f5f7f9; }。</p>
</blockquote>
</li>
<li><p>关闭新建页面的评论功能<br>当集成了评论系统，如 多说 或者 Disqus，所有新建的页面都将自动开启评论。若你不需要评论，请在页面的 Front-matter 里添加 comments 字段，并将值设置为 false。如下所示：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">title: All tags</div><div class="line">date: 2015-12-16 17:05:24</div><div class="line">type: &quot;tags&quot;</div><div class="line">comments: false</div><div class="line">---</div></pre></td></tr></table></figure>
</li>
</ul>
<p>参考：<br><a href="http://theme-next.iissnan.com/faqs.html" target="_blank" rel="external">nexT常见问题</a><br><a href="https://github.com/iissnan/hexo-theme-next/issues" target="_blank" rel="external">nexT主题优化</a><br><a href="http://www.wuxubj.cn/2016/08/Hexo-nexT-build-personal-blog/" target="_blank" rel="external">Hexo+nexT主题搭建个人博客</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用hexo异地更新博客解决办法（Windows）]]></title>
      <url>owker.pw/2016/09/03/%E4%BD%BF%E7%94%A8hexo%E5%BC%82%E5%9C%B0%E6%9B%B4%E6%96%B0%E5%8D%9A%E5%AE%A2%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
      <content type="html"><![CDATA[<p><img src="http://ww4.sinaimg.cn/large/a8fc9690gw1f7he0wwox9j21hc0zk4qp.jpg" alt=""></p>
<blockquote>
<p>本文为解决hexo异地更新博客问题，处理如何将文档托管于github上，要求有通过hexo+github搭建的个人博客。<br>适用于已经通过hexo搭建好博客，希望通过git对版本进行控制的。</p>
</blockquote>
<a id="more"></a>
<h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><p>在已有的github远程库上创建branch分支hexo，该仓库创建时提示由master上复制过来<br><img src="http://ww4.sinaimg.cn/large/a8fc9690gw1f7g9sros1ij20be0cdmyj.jpg" alt=""></p>
<hr>
<p>在博客文件夹git操作：git init;git add .;git commit -m “说明”;实现文件夹的版本控制</p>
<p>关联远程库：git remote add origin + 远程库地址</p>
<p>创建分支hexo，分支名字与远程库分支名相同，两者是一一对应的：git branch hexo</p>
<p>将本地hexo分支push到远程，确保博客源文件正确：git push origin master</p>
<hr>
<p>在另一台电脑上对文件夹进行hexo初始化：hexo init（过程中有问题请参考本博客其他博文）</p>
<p>对该文件夹进行git初始化：git init</p>
<p>关联远程库：git remote add origin + 远程库地址</p>
<p>在该文件夹下执行git add .;git commit -m “说明”;目的在于确定一个master分支的版本</p>
<p>在该文件夹下创建并切换hexo分支：git checkout -b hexo<br>pull远程库hexo到本地分支hexo：git pull origin hexo<br>对冲突文件进行修改，主要修改_config.yml，package.json，删除hello-world.md，然后commit提交hexo版本：git add .;git commit -m “说明” </p>
<hr>
<p>于是，在新的文件夹下也可以更新博客了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[git常用语法小结]]></title>
      <url>owker.pw/2016/09/03/git%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/</url>
      <content type="html"><![CDATA[<p><img src="http://ww1.sinaimg.cn/large/a8fc9690gw1f7he16zfhjj20zk0npago.jpg" alt=""></p>
<blockquote>
<p>本文对git常用语法进行小结，持续更新中。</p>
</blockquote>
<a id="more"></a>
<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>工作区<br>暂存区<br>本地仓库<br>远程仓库</p>
<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><h3 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h3><ul>
<li>初始化文件夹<br>git init</li>
<li>保存到暂存区<br>git add .（保存文件夹所有文件，也可以指定特定文件）</li>
<li>提交到本地仓库master<br>git commit -m “提交说明”</li>
<li>查看本地仓库与工作区是否有更改<br>git status</li>
<li>查看更改内容<br>git diff</li>
<li>查看历史记录<br>git log （–pretty=oneline可加）</li>
<li>记录每一次操作<br>git reflog</li>
<li>退回上一版本<br>git reset –hard HEAD^（HEAD表示当前版本）</li>
<li>退回某一版本<br>git reset –hard b97fa9d（版本编号）</li>
<li>关联远程库<br>git remote add origin + (github上复制的地址)</li>
<li>把当前分支master推送到远程库origin（origin为上面关联的库）<br>git push （-u首次推送） origin master</li>
<li>复制远程库，拷贝项目文件夹，不需要另外新建文件夹，后续cd到该文件夹进行操作<br>git clone + (github上复制的地址)</li>
</ul>
<h3 id="分支操作"><a href="#分支操作" class="headerlink" title="分支操作"></a>分支操作</h3><ul>
<li>查看当前分支情况<br>git branch</li>
<li>创建dev分支<br>git branch dev</li>
<li>切换到dev分支<br>git checkout dev</li>
<li>创建并切换到dev分支<br>git checkout -b dev</li>
<li>合并dev分支到当前分支(fast-forward)<br>git merge dev</li>
<li><p>删除dev分支<br>git branch -d dev</p>
</li>
<li><p>git强制覆盖本地文件<br><code>git fetch --all  
git reset --hard origin/master (远程分支名)</code></p>
</li>
</ul>
<hr>
<ul>
<li>查看分支合并情况<br>git log –graph –pretty=oneline –abbrev-commit</li>
<li>比较工作区和版本的区别<br>git diff HEAD – readme.txt</li>
<li>撤销工作区的修改<br>git checkout – readme.txt</li>
<li>撤销暂存区的修改<br>git reset (–hard可有) HEAD readme.txt</li>
<li>删除暂存区和工作区文件<br>git rm test.txt</li>
<li><code>--no-off</code>方式合并分支dev<br>git merge –no-off -m “说明” dev</li>
<li>保存现场<br>git stash;git stash pop</li>
<li>查看远程库信息<br>git remote -v</li>
<li>第一次使用Git，需要设置署名和邮箱：<br>git config –global user.name “用户名”<br>git config –global user.email “电子邮箱”</li>
<li>生成SSH keys<br>ssh-keygen -t rsa -C “github网站邮箱”<br>cat ~/.ssh/id_rsa.pub拷贝内容到网上生成SSH key</li>
</ul>
<p>参考文件：<br><a href="https://yunpan.cn/cMbGQdJpfmRvc" target="_blank" rel="external">https://yunpan.cn/cMbGQdJpfmRvc</a>  访问密码 b04e<br><a href="https://yunpan.cn/cMbGdpRMmCSdt" target="_blank" rel="external">https://yunpan.cn/cMbGdpRMmCSdt</a>  访问密码 6823</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[markdown常用语法小结]]></title>
      <url>owker.pw/2016/09/02/markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95%E5%B0%8F%E7%BB%93/</url>
      <content type="html"><![CDATA[<p><img src="http://ww3.sinaimg.cn/large/a8fc9690gw1f7he37ihtsj20zk0k0jvb.jpg" alt=""></p>
<blockquote>
<p>本文对常用markdown语法进行小结，按使用频率排序，持续更新中。</p>
</blockquote>
<a id="more"></a>
<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><h3 id="1-设置标题"><a href="#1-设置标题" class="headerlink" title="1.设置标题"></a>1.设置标题</h3><h1 id="文字下方放置若干“-”：一级标题"><a href="#文字下方放置若干“-”：一级标题" class="headerlink" title="文字下方放置若干“=”：一级标题"></a>文字下方放置若干“=”：一级标题</h1><h2 id="文字下方放置若干“-”：二级标题"><a href="#文字下方放置若干“-”：二级标题" class="headerlink" title="文字下方放置若干“-”：二级标题"></a>文字下方放置若干“-”：二级标题</h2><h3 id="文字前方放置1-6个“-空格”：1-6级标题（该示例为三级标题）"><a href="#文字前方放置1-6个“-空格”：1-6级标题（该示例为三级标题）" class="headerlink" title="文字前方放置1-6个“#+空格”：1-6级标题（该示例为三级标题）"></a>文字前方放置1-6个“#+空格”：1-6级标题（该示例为三级标题）</h3><p><img src="http://ww3.sinaimg.cn/mw690/a8fc9690gw1f7fp15hlyej20dj034t9f.jpg" alt="" title="标题"></p>
<h3 id="2-添加列表"><a href="#2-添加列表" class="headerlink" title="2.添加列表"></a>2.添加列表</h3><h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h4><p>“*+空格”或“-+空格”或“++空格”放于列表前，同一列表使用符号应统一，效果如下：</p>
<ul>
<li>列表1</li>
<li>列表2</li>
<li>列表3<br><img src="http://ww2.sinaimg.cn/mw690/a8fc9690gw1f7fp21twtnj20en02pgm1.jpg" alt="" title="无序列表"></li>
</ul>
<h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><p>数字+“.”+空格放于列表前</p>
<ol>
<li>列表1</li>
<li>列表2</li>
<li>列表3</li>
</ol>
<h3 id="3-添加引用"><a href="#3-添加引用" class="headerlink" title="3.添加引用"></a>3.添加引用</h3><p>“&gt;”放于引用文字前，效果如下：</p>
<blockquote>
<p>引用1<br>引用2<br>引用3</p>
</blockquote>
<p><img src="http://ww2.sinaimg.cn/mw690/a8fc9690gw1f7fp4j23ngj206r02pglr.jpg" alt="" title="引用"></p>
<h3 id="添加代码"><a href="#添加代码" class="headerlink" title="添加代码"></a>添加代码</h3><p>添加一行代码：在代码前后添加符号“`”<br>添加多行代码：在每一行代码前都添加Tab或4个空格</p>
<pre><code>while(1){
    for(i=0;i&lt;10;i++);
}
</code></pre><p>添加多行代码并增加行号：代码前后增加三个“`”+语言（例如cpp）</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</div><div class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="插入链接"><a href="#插入链接" class="headerlink" title="插入链接:"></a>插入链接:</h3><p>内联方式：[显示的字] (对应的网址)<br><a href="http://baidu.com" target="_blank" rel="external">百度</a><br><img src="http://ww4.sinaimg.cn/mw690/a8fc9690gw1f7fpdwjzb9j208k01caa7.jpg" alt=""><br>引用方式<br>I get 10 times more traffic from <a href="http://google.com/" title="Google" target="_blank" rel="external">Google</a> than from <a href="http://search.yahoo.com/" title="Yahoo Search" target="_blank" rel="external">Yahoo</a> or <a href="http://search.msn.com/" title="MSN Search" target="_blank" rel="external">MSN</a>.  </p>
<p><img src="http://ww2.sinaimg.cn/large/a8fc9690gw1f7g8xle9w5j20js03mjsh.jpg" alt=""></p>
<h3 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片:"></a>插入图片:</h3><p>内联方式：![] (图片地址+空格+“图片标题”)<br><img src="http://ww4.sinaimg.cn/mw690/a8fc9690gw1f7fpikdwlfj20fo01ejru.jpg" alt=""><br>这里直接用谷歌扩展程序微博图床生成，也可用引用方式</p>
<h3 id="文字加粗：在文字前后加符号“-”或者“-”"><a href="#文字加粗：在文字前后加符号“-”或者“-”" class="headerlink" title="文字加粗：在文字前后加符号“**”或者“__”"></a>文字加粗：在文字前后加符号“**”或者“__”</h3><p><strong>粗体</strong></p>
<h3 id="文字斜体：在文字前后加符号“-”或者“-”"><a href="#文字斜体：在文字前后加符号“-”或者“-”" class="headerlink" title="文字斜体：在文字前后加符号“*”或者“_”"></a>文字斜体：在文字前后加符号“*”或者“_”</h3><p><em>斜体</em></p>
<h3 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h3><p>在空白行下方添加三条“-”横线。（前面讲过在文字下方添加“-”，实现的2级标题）</p>
<hr>
<h3 id="引用方式"><a href="#引用方式" class="headerlink" title="引用方式"></a>引用方式</h3><h3 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h3><p>编辑.md文件可用sublime text3，安装Markdown Editing和Markdown Preview插件</p>
<p>参考文件：<br><a href="https://yunpan.cn/cMGfkIUtwmjV4" target="_blank" rel="external">https://yunpan.cn/cMGfkIUtwmjV4</a>  访问密码 581f</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[github+hexo搭建免费个人博客（Windows）]]></title>
      <url>owker.pw/2016/09/01/github+hexo%E6%90%AD%E5%BB%BA%E5%85%8D%E8%B4%B9%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88Windows%EF%BC%89/</url>
      <content type="html"><![CDATA[<p><img src="http://ww1.sinaimg.cn/large/a8fc9690gw1f7hdxrjygjj20zk0npwlx.jpg" alt=""></p>
<blockquote>
<p>出于工作、兴趣、分享等各种原因，很多人想搭建自己的一个博客，本文将介绍如何利用github+hexo搭建免费的个人博客。</p>
</blockquote>
<a id="more"></a>
<h2 id="主要步骤"><a href="#主要步骤" class="headerlink" title="主要步骤"></a>主要步骤</h2><p>1.安装node.js，用于生成静态页面（node-v4.4.4-x64.msi）<a href="http://nodejs.cn/" target="_blank" rel="external">node.js中文网</a>，确认版本用node -v<br>2.安装git，将本地hexo内容提交到github上去（msysgit为windows版本，Git-2.5.1-64-bit.exe）<br>3.申请github账号，作为博客的远程仓库，免费挂在网上提供访问的，配置好SSH Keys之后提交不需再手动输入账号密码，检查是否有ssh keys（cd ~/.ssh若提示No such file or directory则要生成）<br>设置用户信息命令，新建远程仓库karl2000.github.io(命名要求”用户名.github.io”)<br>git config –global user.name “karl2000”//用户名<br>git config –global user.name “karl2000@qq.com”//邮箱<br>4.安装hexo（npm install hexo-cli -g）（npm install hexo –save），确认版本用hexo -v（linux下还需另外安装npm:<code>curl http://npmjs.org/install.sh | sh</code>）<br>5.初始化文件夹（hexo init）<br>6.运行命令npm install hexo-deployer-git –save<br>避免出现如下错误提示<br>ERROR Deployer not found : github<br>7.清除缓存文件 (db.json) 和已生成的静态文件 (public)。（hexo clean，本机调试时可不用）<br>8.生成静态页面（hexo generate或者hexo g）<br>9.本地启动（hexo server或者hexo s）<br>10.部署（hexo deploy或者hexo d）<br>打开站点_config.yml，修改deploy指向<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo: git@github.com:karl2000/karl2000.github.io.git #此处复制github仓库地址后再加上“.git”</div><div class="line">  branch: master</div></pre></td></tr></table></figure></p>
<p>11.新建博客（hexo new 标题或者hexo n 标题）<br>12.新建页面（hexo new page “tags”新建标签页面）<br>步骤1-4只配置一次即可，以后操作只需后面的步骤。</p>
<p>理解：网页github上的master分支是自动维护的，由hexo d进行部署，不要手动git对其操作</p>
<p>更改主题，<br>可到<a href="https://hexo.io/themes/搜索合适的主题" target="_blank" rel="external">https://hexo.io/themes/搜索合适的主题</a><br>复制下载主题git clone <a href="https://github.com/tufu9441/maupassant-hexo.git" target="_blank" rel="external">https://github.com/tufu9441/maupassant-hexo.git</a> themes/maupassant<br>安装渲染器（==）<br>    npm install hexo-renderer-jade –save<br>    npm install hexo-renderer-sass –save<br>hexo使用参考官方教程<a href="https://hexo.io/zh-cn/" target="_blank" rel="external">https://hexo.io/zh-cn/</a></p>
<p>思路：安装node.js-&gt;安装git-&gt;安装hexo</p>
<p>经验：</p>
<ol>
<li>如果修改_config.yml过程中出现一堆乱码，很有可能在冒号后面没有加空格引起</li>
<li>公益404网页无法显示解决办法：使用独立域名</li>
<li>hexo d -g命令不报错但是网页打不开，请尝试hexo clean</li>
<li><p>出现如下错误，原因是对package.json进行了修改（可能由于git merge或者git pull产生），利用<code>git checkout -- package.json</code>撤销对工作区的修改，或者打开文件直接修改</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">Administrator@FVJOP6VIOYE3H4W MINGW64 /e/CODE/git/BLOG/karl2000githubio (master)</div><div class="line">$ hexo</div><div class="line">FATAL Cannot read property &apos;code&apos; of undefined</div><div class="line">TypeError: Cannot read property &apos;code&apos; of undefined</div><div class="line">    at C:\Users\Administrator\AppData\Roaming\npm\node_modules\hexo-cli\lib\find_pkg.js:23:25</div><div class="line">    at tryCatcher (C:\Users\Administrator\AppData\Roaming\npm\node_modules\hexo-cli\node_modules\bluebird\js\release\util.js:16:23)</div><div class="line">    at Promise._settlePromiseFromHandler (C:\Users\Administrator\AppData\Roaming\npm\node_modules\hexo-cli\node_modules\bluebird\js\release\promise.js:510:31)</div><div class="line">    at Promise._settlePromise (C:\Users\Administrator\AppData\Roaming\npm\node_modules\hexo-cli\node_modules\bluebird\js\release\promise.js:567:18)</div><div class="line">    at Promise._settlePromise0 (C:\Users\Administrator\AppData\Roaming\npm\node_modules\hexo-cli\node_modules\bluebird\js\release\promise.js:612:10)</div><div class="line">    at Promise._settlePromises (C:\Users\Administrator\AppData\Roaming\npm\node_modules\hexo-cli\node_modules\bluebird\js\release\promise.js:687:18)</div><div class="line">    at Async._drainQueue (C:\Users\Administrator\AppData\Roaming\npm\node_modules\hexo-cli\node_modules\bluebird\js\release\async.js:138:16)</div><div class="line">    at Async._drainQueues (C:\Users\Administrator\AppData\Roaming\npm\node_modules\hexo-cli\node_modules\bluebird\js\release\async.js:148:10)</div><div class="line">    at Immediate.Async.drainQueues [as _onImmediate] (C:\Users\Administrator\AppData\Roaming\npm\node_modules\hexo-cli\node_modules\bluebird\js\release\async.js:17:14)</div><div class="line">    at processImmediate [as _immediateCallback] (timers.js:383:17)</div></pre></td></tr></table></figure>
</li>
<li><p>出现如下错误，输入<code>npm install hexo-server --save</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">Administrator@FVJOP6VIOYE3H4W MINGW64 /d/karl2000.github.io (hexo)</div><div class="line">$ hexo s</div><div class="line">Usage: hexo &lt;command&gt;</div><div class="line"></div><div class="line">Commands:</div><div class="line">  clean     Removed generated files and cache.</div><div class="line">  config    Get or set configurations.</div><div class="line">  deploy    Deploy your website.</div><div class="line">  generate  Generate static files.</div><div class="line">  help      Get help on a command.</div><div class="line">  init      Create a new Hexo folder.</div><div class="line">  list      List the information of the site</div><div class="line">  migrate   Migrate your site from other system to Hexo.</div><div class="line">  new       Create a new post.</div><div class="line">  publish   Moves a draft post from _drafts to _posts folder.</div><div class="line">  render    Render files with renderer plugins.</div><div class="line">  version   Display version information.</div><div class="line"></div><div class="line">Global Options:</div><div class="line">  --config  Specify config file instead of using _config.yml</div><div class="line">  --cwd     Specify the CWD</div><div class="line">  --debug   Display all verbose messages in the terminal</div><div class="line">  --draft   Display draft posts</div><div class="line">  --safe    Disable all plugins and scripts</div><div class="line">  --silent  Hide output on console</div><div class="line"></div><div class="line">For more help, you can use &apos;hexo help [command]&apos; for the detailed information</div><div class="line">or you can check the docs: http://hexo.io/docs/</div></pre></td></tr></table></figure>
</li>
</ol>
<p>新建草稿<br>hexo new draft “文章名称”</p>
<p>把草稿变成文章，或者页面：<br>hexo publish [layout] <filename></filename></p>
<p>思维导图</p>
]]></content>
    </entry>
    
  
  
</search>
